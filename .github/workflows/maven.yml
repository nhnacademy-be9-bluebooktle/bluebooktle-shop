name: CI & CD

on:
  push:
    branches: [ develop ]
    paths:
      - 'backend-server/**'
      - 'frontend-server/**'
      - 'gateway-server/**'
      - 'eureka-server/**'
      - 'common-module/**'
  pull_request:
    branches: [ develop ]
    paths:
      - 'backend-server/**'
      - 'frontend-server/**'
      - 'gateway-server/**'
      - 'eureka-server/**'
      - 'common-module/**'

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      module: ${{ steps.detect.outputs.module }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Detect changed module
        id: detect
        run: |
          echo "BEFORE: ${{ github.event.before }}"
          echo "SHA:    ${{ github.sha }}"
          CHANGED=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | tee /dev/stderr | grep '/' | head -1)
          MODULE=${CHANGED%%/*}
          if [ -z "$MODULE" ]; then
            echo "ERROR: 변경된 모듈을 감지할 수 없습니다." >&2
            exit 1
          fi
          echo "Changed module: '$MODULE'"
          echo "::set-output name=module::$MODULE"

      - name: Build changed module
        run: mvn -B -pl "${{ steps.detect.outputs.module }}" -am clean install -DskipTests

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: jar
          path: ${{ steps.detect.outputs.module }}/target/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: jar

      - name: Prepare remote directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_ID }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            mkdir -p ~/app/jars

      - name: Upload JAR to remote
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_ID }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          source: '*.jar'
          target: '~/app/jars/'

      - name: Run rolling deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_ID }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            chmod +x ~/startup.sh
            ~/startup.sh
