name: CI & CD

on:
  push:
    branches: [ develop ]
    paths:
      - 'backend-server/**'
      - 'frontend-server/**'
      - 'gateway-server/**'
      - 'eureka-server/**'
      - 'common-module/**'
      - 'auth-server/**'
  pull_request:
    branches: [ develop ]
    paths:
      - 'backend-server/**'
      - 'frontend-server/**'
      - 'gateway-server/**'
      - 'eureka-server/**'
      - 'common-module/**'
      - 'auth-server/**'

jobs:
  detect_changes:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.list.outputs.changed }}
    steps:
      - name: Checkout full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Filter changed paths
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            backend-server:
              - 'backend-server/**'
            frontend-server:
              - 'frontend-server/**'
            gateway-server:
              - 'gateway-server/**'
            eureka-server:
              - 'eureka-server/**'
            common-module:
              - 'common-module/**'
            auth-server:
              - 'auth-server/**'

      - name: Generate final changed-services list
        id: list
        run: |
          modules=()
          [[ "${{ steps.filter.outputs.backend-server }}"  == "true" ]] && modules+=("backend-server")
          [[ "${{ steps.filter.outputs.frontend-server }}" == "true" ]] && modules+=("frontend-server")
          [[ "${{ steps.filter.outputs.gateway-server }}"  == "true" ]] && modules+=("gateway-server")
          [[ "${{ steps.filter.outputs.eureka-server }}"   == "true" ]] && modules+=("eureka-server")
          [[ "${{ steps.filter.outputs.auth-server }}"     == "true" ]] && modules+=("auth-server")
          if [[ "${{ steps.filter.outputs.common-module }}" == "true" ]]; then
            for svc in backend-server frontend-server gateway-server eureka-server auth-server; do
              [[ ! " ${modules[*]} " =~ " $svc " ]] && modules+=("$svc")
            done
          fi
          echo "changed=${modules[*]}" >> $GITHUB_OUTPUT

  build:
    needs: detect_changes
    if: needs.detect_changes.outputs.changed != ''
    runs-on: ubuntu-latest

    environment:
      name: 'dev'
    env:
      CONFIG_SERVER_URI: ${{ secrets.CONFIG_SERVER_URI }}
      SPRING_PROFILES_ACTIVE: 'dev'
      JWT_SECRET_KEY: ${{ secrets.REPO_JWT_SECRET_KEY }}

      SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
      SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
      SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}

      SPRING_DATA_REDIS_PASSWORD: ${{ secrets.SPRING_DATA_REDIS_PASSWORD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Clean & Build changed-services
        run: |
          MODULE_CSV=$(echo "${{ needs.detect_changes.outputs.changed }}" | sed 's/ /,/g')
          echo "▶ mvn clean package -pl $MODULE_CSV -am"
          mvn -B clean package -pl "$MODULE_CSV" -am -DskipTests

      - name: Upload built JARs
        uses: actions/upload-artifact@v4
        with:
          name: jars
          path: '**/target/*.jar'
          if-no-files-found: error

  deploy:
    needs: [ detect_changes, build ]
    if: needs.detect_changes.outputs.changed != ''
    runs-on: ubuntu-latest

    environment:
      name: 'dev'

    env:
      CONFIG_SERVER_URI: ${{ secrets.CONFIG_SERVER_URI }}
      SPRING_PROFILES_ACTIVE: dev
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}

      SPRING_DATASOURCE_URL: ${{ secrets.SPROMG_DATASOURCE_URL }}
      SPRING_DATASOURCE_USERNAME: ${{ secrets.SPROMG_DATASOURCE_USERNAME }}
      SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPROMG_DATASOURCE_PASSWORD }}

      SPRING_DATA_REDIS_PASSWORD: ${{ secrets.SPRING_DATA_REDIS_PASSWORD }}

    steps:
      - name: Download JARs
        uses: actions/download-artifact@v4
        with:
          name: jars
          path: downloaded_jars

      - name: Debug deploy modules
        run: |
          echo ">>> Deploy sees modules: '${{ needs.detect_changes.outputs.changed }}'"
          echo ">>> Using CONFIG_SERVER_URI=${CONFIG_SERVER_URI}"
          echo ">>> Using SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}"

      - name: Upload JARs to remote
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_ID }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          source: "downloaded_jars"
          target: "~/app/jars/"
          strip_components: 1

      - name: Rolling deploy for services
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_ID }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          capture_stdout: true
          script: |
            echo ">>> SSH sees modules: ${{ needs.detect_changes.outputs.changed }}"
            chmod +x ~/startup.sh
            
            echo "Attempting to access env.JWT_SECRET_KEY from GitHub Actions workflow:"
            if [ -n "${{ env.JWT_SECRET_KEY }}" ]; then
              # 이 부분은 *** 로 마스킹될 가능성이 높습니다. 마스킹된다면 값이 있다는 의미입니다.
              echo "SSH_ACTION_DEBUG_STEP1: env.JWT_SECRET_KEY from GA is SET. Masked value: [${{ env.JWT_SECRET_KEY }}]"
            else
              echo "SSH_ACTION_DEBUG_STEP1: env.JWT_SECRET_KEY from GA is NOT SET or EMPTY" # 여기가 문제면 job env 설정이나 secret 자체 문제
            fi
            
            # 환경변수로 프로파일과 Config URI를 내보냄
            export SPRING_PROFILES_ACTIVE="${{ env.SPRING_PROFILES_ACTIVE }}"
            export CONFIG_SERVER_URI="${{ env.CONFIG_SERVER_URI }}"
            export JWT_SECRET_KEY="${{ env.JWT_SECRET_KEY }}"
            
            echo "Checking shell variables after export:"
            if [ -n "$JWT_SECRET_KEY" ]; then 
              echo "SSH_ACTION_DEBUG_STEP2: Shell variable JWT_SECRET_KEY after export is SET (value not printed for security)"
            else
              echo "SSH_ACTION_DEBUG_STEP2: Shell variable JWT_SECRET_KEY after export is NOT SET or EMPTY" # 여기가 문제면 export 과정이나 값 자체의 문제
            fi
            
            if [ -n "$SPRING_PROFILES_ACTIVE" ]; then
              echo "SSH_ACTION_DEBUG_STEP2: Shell variable SPRING_PROFILES_ACTIVE after export is [$SPRING_PROFILES_ACTIVE]"
            else
              echo "SSH_ACTION_DEBUG_STEP2: Shell variable SPRING_PROFILES_ACTIVE after export is NOT SET or EMPTY"
            fi
            echo "---------------------------------------------------"

            for MOD in ${{ needs.detect_changes.outputs.changed }}; do
              echo "▶ Rolling deploy: $MOD"
              ~/startup.sh "$MOD"
            done